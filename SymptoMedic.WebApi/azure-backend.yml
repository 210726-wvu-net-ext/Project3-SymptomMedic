trigger:
  branches:
    include:
    - master
    - Develop
  paths:
    include:
    - SymptoMedic.WebApi

pr:
  branches:
    include:
    - master
    - Develop
  paths:
    include:
    - SymptoMedic.WebApi

pool:
  vmImage: 'windows-latest'

variables:
  solution: './SymptoMedic.WebApi/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  symptDirectory: './SymptoMedic.WebApi'
  cReg: 2107-p3-acr-P3-SymptoMedic

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'SymptoMedic_Sonarcloud'
        organization: '210726-wvu-net-ext'
        scannerMode: 'MSBuild'
        projectKey: 'SymptoMedic-Backend'
        projectName: 'SymptoMedic-Backend'
        extraProperties: |
          sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/*/coverage.opencover.xml

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - script: dotnet test
        --configuration Release
        --collect:"XPlat Code Coverage"
        --results-directory $(Agent.TempDirectory)
        --
        DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
      displayName: dotnet test
      workingDirectory: $(symptDirectory)
      continueOnError: true

    - task: SonarCloudAnalyze@1
      displayName: 'Run SonarCloud analysis'

    - task: SonarCloudPublish@1
      displayName: 'Publish results on build summary'

- stage: Docker
  jobs:
    - job: Docker_Build
      displayName: Docker Build & Push
      steps:
      #Login
      - task: Docker@2
        displayName: Login
        inputs:
          containerRegistry: $(cReg)
          command: 'login'
      #Build
      - task: Docker@2
        displayName: Build & Push
        inputs:
          containerRegistry: '$(cReg)'
          repository: 'kwedwick/symptomedic-api'
          command: 'buildAndPush'
          Dockerfile: '**/Dockerfile'
          tags: 'latest'
      #Publish artifact
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(symptDirectory)/symptomedicwebapi.yml'
          artifact: 'manifest'
          publishLocation: 'pipeline'
      
      - task: DownloadSecureFile@1
        inputs:
          secureFile: 'connection_string.txt'
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Agent.TempDirectory)/connection_string.txt'
          artifact: 'manifest2'
          publishLocation: 'pipeline'
      #logout
      - task: Docker@2
        displayName: Logout
        inputs:
          containerRegistry: $(cReg)
          command: 'logout'